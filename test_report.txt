
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/objects.test.ts
PASS src/nested.test.ts
PASS src/arrays.test.ts
PASS src/components/StartAttempt.test.tsx
PASS src/form-components/MultipleChoiceQuestion.test.tsx
PASS src/components/TwoDice.test.tsx
PASS src/functions.test.ts
PASS src/bad-components/ChooseTeam.test.tsx
PASS src/bad-components/DoubleHalf.test.tsx
PASS src/form-components/CheckAnswer.test.tsx
FAIL src/components/ChangeType.test.tsx
  ‚óè ChangeType Component tests ‚Ä∫ The initial type is Short Answer

    TestingLibraryElementError: Unable to find an element with the text: /Short Answer/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mChange Type[0m
          [36m</button>[39m
        [36m</span>[39m
      [36m</div>[39m
    [36m</body>[39m

       9 |     test("The initial type is Short Answer", () => {
      10 |         // We use `getByText` because the text MUST be there
    > 11 |         const typeText = screen.getByText(/Short Answer/i);
         |                                 ^
      12 |         expect(typeText).toBeInTheDocument();
      13 |     });
      14 |     test("The initial type is not Multiple Choice", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/ChangeType.test.tsx:11:33)

  ‚óè ChangeType Component tests ‚Ä∫ Clicking the button changes the type.

    TestingLibraryElementError: Unable to find an element with the text: /Multiple Choice/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mChange Type[0m
          [36m</button>[39m
        [36m</span>[39m
      [36m</div>[39m
    [36m</body>[39m

      31 |         changeTypeButton.click();
      32 |         // Should be Multiple Choice
    > 33 |         const typeTextMC = screen.getByText(/Multiple Choice/i);
         |                                   ^
      34 |         expect(typeTextMC).toBeInTheDocument();
      35 |         // Should NOT be Short Answer
      36 |         const typeTextSA = screen.queryByText(/Short Answer/i);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/ChangeType.test.tsx:33:35)

  ‚óè ChangeType Component tests ‚Ä∫ Clicking the button twice keeps the type the same.

    TestingLibraryElementError: Unable to find an element with the text: /Short Answer/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<span>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mChange Type[0m
          [36m</button>[39m
        [36m</span>[39m
      [36m</div>[39m
    [36m</body>[39m

      45 |         changeTypeButton.click();
      46 |         // Should be Short Answer
    > 47 |         const typeTextSA = screen.getByText(/Short Answer/i);
         |                                   ^
      48 |         expect(typeTextSA).toBeInTheDocument();
      49 |         // Should NOT be Multiple Choice
      50 |         const typeTextMC = screen.queryByText(/Multiple Choice/i);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/ChangeType.test.tsx:47:35)

PASS src/form-components/EditMode.test.tsx
PASS src/components/CycleHoliday.test.tsx
FAIL src/form-components/GiveAttempts.test.tsx
  ‚óè GiveAttempts Component tests ‚Ä∫ You can use attempts

    TestingLibraryElementError: Unable to find an element with the text: /0/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label"[39m
              [33mfor[39m=[32m"requestAttempts"[39m
            [36m>[39m
              [0mRequest Attempts:[0m
            [36m</label>[39m
            [36m<input[39m
              [33mclass[39m=[32m"form-control"[39m
              [33mid[39m=[32m"requestAttempts"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div>[39m
            [0mAttempts Left: [0m
            [0m2[0m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mGain[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mUse[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      24 |         use.click();
      25 |         use.click();
    > 26 |         expect(screen.getByText(/0/i)).toBeInTheDocument();
         |                       ^
      27 |         expect(use).toBeDisabled();
      28 |     });
      29 |     test("You can gain arbitrary attempts", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:26:23)

  ‚óè GiveAttempts Component tests ‚Ä∫ You can gain arbitrary attempts

    TestingLibraryElementError: Unable to find an element with the text: /13/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label"[39m
              [33mfor[39m=[32m"requestAttempts"[39m
            [36m>[39m
              [0mRequest Attempts:[0m
            [36m</label>[39m
            [36m<input[39m
              [33mclass[39m=[32m"form-control"[39m
              [33mid[39m=[32m"requestAttempts"[39m
              [33mtype[39m=[32m"number"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div>[39m
            [0mAttempts Left: [0m
            [0m3[0m
          [36m</div>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mGain[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mUse[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      32 |         userEvent.type(amountToGive, "10");
      33 |         gain.click();
    > 34 |         expect(screen.getByText(/13/i)).toBeInTheDocument();
         |                       ^
      35 |         userEvent.type(amountToGive, "100");
      36 |         gain.click();
      37 |         expect(screen.getByText(/113/i)).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:34:23)

PASS src/components/Counter.test.tsx
PASS src/form-components/ChangeColor.test.tsx
  ‚óè Console

    console.error
      Warning: React does not recognize the `data-testId` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `data-testid` instead. If you accidentally passed it from a parent component, remove it from the DOM element.
          at span
          at div
          at div
          at div
          at ChangeColor (/home/runner/work/tasks/tasks/src/form-components/ChangeColor.tsx:5:31)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:67:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:43:5)
      at validateProperty$1 (node_modules/react-dom/cjs/react-dom.development.js:3513:7)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom.development.js:3559:21)
      at validateProperties$2 (node_modules/react-dom/cjs/react-dom.development.js:3583:3)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom.development.js:8765:5)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom.development.js:9041:5)
      at finalizeInitialChildren (node_modules/react-dom/cjs/react-dom.development.js:10201:3)

PASS src/components/RevealAnswer.test.tsx
FAIL src/bad-components/ShoveBox.test.tsx
  ‚óè ShoveBox Component tests ‚Ä∫ The MoveableBox is initially nearby.

    expect(element).toHaveStyle()

    - Expected

    - marginLeft: 10px;

       9 |     test("The MoveableBox is initially nearby.", () => {
      10 |         const box = screen.getByTestId("moveable-box");
    > 11 |         expect(box).toHaveStyle({ marginLeft: "10px" });
         |                     ^
      12 |     });
      13 |     test("There is a button", () => {
      14 |         expect(screen.getByRole("button")).toBeInTheDocument();

      at Object.<anonymous> (src/bad-components/ShoveBox.test.tsx:11:21)

  ‚óè ShoveBox Component tests ‚Ä∫ Clicking the button moves the box.

    expect(element).toHaveStyle()

    - Expected

    - marginLeft: 14px;

      17 |         const shoveBox = screen.getByRole("button");
      18 |         shoveBox.click();
    > 19 |         expect(screen.getByTestId("moveable-box")).toHaveStyle({
         |                                                    ^
      20 |             marginLeft: "14px"
      21 |         });
      22 |         shoveBox.click();

      at Object.<anonymous> (src/bad-components/ShoveBox.test.tsx:19:52)

PASS src/bad-components/ColoredBox.test.tsx
PASS src/App.test.tsx
  ‚óè Console

    console.error
      Warning: React does not recognize the `data-testId` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `data-testid` instead. If you accidentally passed it from a parent component, remove it from the DOM element.
          at span
          at div
          at div
          at div
          at ChangeColor (/home/runner/work/tasks/tasks/src/form-components/ChangeColor.tsx:5:31)
          at div
          at App

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:67:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:43:5)
      at validateProperty$1 (node_modules/react-dom/cjs/react-dom.development.js:3513:7)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom.development.js:3559:21)
      at validateProperties$2 (node_modules/react-dom/cjs/react-dom.development.js:3583:3)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom.development.js:8765:5)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom.development.js:9041:5)
      at finalizeInitialChildren (node_modules/react-dom/cjs/react-dom.development.js:10201:3)

-----------------------------|---------|----------|---------|---------|-------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------------|---------|----------|---------|---------|-------------------
All files                    |     100 |    98.73 |     100 |     100 |                   
 src                         |     100 |      100 |     100 |     100 |                   
  App.tsx                    |     100 |      100 |     100 |     100 |                   
  arrays.ts                  |     100 |      100 |     100 |     100 |                   
  functions.ts               |     100 |      100 |     100 |     100 |                   
  nested.ts                  |     100 |      100 |     100 |     100 |                   
  objects.ts                 |     100 |      100 |     100 |     100 |                   
 src/bad-components          |     100 |       50 |     100 |     100 |                   
  ChooseTeam.tsx             |     100 |       50 |     100 |     100 | 19                
  ColoredBox.tsx             |     100 |      100 |     100 |     100 |                   
  DoubleHalf.tsx             |     100 |      100 |     100 |     100 |                   
  ShoveBox.tsx               |     100 |      100 |     100 |     100 |                   
 src/components              |     100 |      100 |     100 |     100 |                   
  ChangeType.tsx             |     100 |      100 |     100 |     100 |                   
  Counter.tsx                |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx           |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx           |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx           |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx                |     100 |      100 |     100 |     100 |                   
 src/form-components         |     100 |      100 |     100 |     100 |                   
  ChangeColor.tsx            |     100 |      100 |     100 |     100 |                   
  CheckAnswer.tsx            |     100 |      100 |     100 |     100 |                   
  EditMode.tsx               |     100 |      100 |     100 |     100 |                   
  GiveAttempts.tsx           |     100 |      100 |     100 |     100 |                   
  MultipleChoiceQuestion.tsx |     100 |      100 |     100 |     100 |                   
 src/interfaces              |       0 |        0 |       0 |       0 |                   
  answer.ts                  |       0 |        0 |       0 |       0 |                   
  question.ts                |       0 |        0 |       0 |       0 |                   
-----------------------------|---------|----------|---------|---------|-------------------

Test Suites: 3 failed, 17 passed, 20 total
Tests:       7 failed, 127 passed, 134 total
Snapshots:   0 total
Time:        7.463 s
Ran all test suites.
